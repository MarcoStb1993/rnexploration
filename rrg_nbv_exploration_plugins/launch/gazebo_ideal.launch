<!-- Gazebo launch files for world and robot -->

<launch>
	<arg name="world_file" default="$(find husky_gazebo)/worlds/clearpath_playpen.world" />
	<arg name="laser_enabled" default="true" />
	<arg name="realsense_enabled" default="false" />
	<arg name="velodyne_enabled" default="false" />
	<arg name="use_ekf" default="false" />
	<arg name="robot_frame" default="base_footprint" />

	<!-- World launch -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(arg world_file)" />
		<arg name="paused" value="false" />
		<arg name="use_sim_time" value="true" />
		<arg name="gui" value="true" />
		<arg name="headless" value="false" />
		<arg name="debug" value="false" />
	</include>

	<arg name="robot_namespace" default="/" />

	<!-- Robot starting position in world -->
	<arg name="x" default="0.0" />
	<arg name="y" default="0.0" />
	<arg name="z" default="0.0" />
	<arg name="yaw" default="1.5707963" />

	<arg name="urdf_extras" default="$(optenv HUSKY_URDF_EXTRAS)" /> <!-- set to path with additions to Husky URDF -->

	<arg name="config_extras" default="$(eval optenv('HUSKY_CONFIG_EXTRAS', find('husky_control') + '/config/empty.yaml'))" />


	<group ns="$(arg robot_namespace)">

		<!-- Load robot description -->
		<param name="robot_description" command="$(find xacro)/xacro '$(find rrg_nbv_exploration_plugins)/urdf/ideal_robot.urdf.xacro'" />

		<!-- Load controller configuration -->
		<rosparam command="load" file="$(find husky_control)/config/control.yaml" />
		<group if="$(arg realsense_enabled)">
			<!-- Load realsense controller config -->
			<rosparam command="load" file="$(find rrg_nbv_exploration_plugins)/config/realsense_config.yaml" />
			<node name="realsense_controller_spawner" pkg="controller_manager" type="spawner" args="realsense_joint_state_controller realsense_controller" />
		</group>

		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

		<!-- Spawn robot in gazebo -->
		<node name="spawn_husky_model" pkg="gazebo_ros" type="spawn_model" args="-x $(arg x)
		      -y $(arg y)
		      -z $(arg z)
		      -Y $(arg yaw)
		      -unpause
		      -urdf
		      -param robot_description
		      -model $(arg robot_namespace)" />

	</group>
</launch>