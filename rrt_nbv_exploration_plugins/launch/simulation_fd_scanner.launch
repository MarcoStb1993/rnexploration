<!-- Simulation of Husky UGV with FD Scanner in Gazebo running Robot Statemachine with GMapping 
	and RN Exploration -->

<launch>
	<arg name="world"
		default="$(find husky_gazebo)/worlds/clearpath_playpen.world" />
	<arg name="robot_frame" default="base_footprint" />
	<arg name="autonomy_cmd_vel_topic" default="/autonomy/cmd_vel" />
	<arg name="teleoperation_cmd_vel_topic"
		default="/teleoperation/cmd_vel" />
	<arg name="cmd_vel_topic" default="/cmd_vel" />
	<arg name="joystick_used" default="false" />
	<arg name="joystick_topic" default="/joy" />
	<arg name="calculate_goal_plugin" default="rsm::RnExplorationState" />
	<arg name="navigation_plugin" default="rsm::NavigationState" />
	<arg name="mapping_plugin" default="rsm::MappingDummyState" />
	<arg name="waypoint_routines" default="['Reversing']" />
	<arg name="rviz" default="false" />
	<arg name="edge_length" default="0" />
	<arg name="rne_mode" default="0" /><!-- 0=classic,1=horizon,2=receding horizon -->
	<arg name="horizon_length" default="3" />
	<arg name="gain_mode" default="1" /> <!-- 0=comparison, 1=sparse ray polling, 2=sparse raycasting -->
	<arg name="oc_resolution" default="0.1" />
	<arg name="delta_phi" default="10" />
	<arg name="delta_theta" default="10" />
	<arg name="log_gain_calculations" default="true" />
	<arg name="coupled_gain_calculation" default="false" />
	<arg name="max_tree_nodes" default="0" />

	<include file="$(find rrt_nbv_exploration_plugins)/launch/gazebo.launch">
		<arg name="world_file" value="$(arg world)" />
		<arg name="fd_scanner_enabled" value="true" />
	</include>

	<include file="$(find rsm_core)/launch/rsm.launch">
		<arg name="update_frequency" value="20" />
		<arg name="robot_frame" value="$(arg robot_frame)" />
		<arg name="autonomy_cmd_vel_topic"
			value="$(arg autonomy_cmd_vel_topic)" />
		<arg name="teleoperation_cmd_vel_topic"
			value="$(arg teleoperation_cmd_vel_topic)" />
		<arg name="cmd_vel_topic" value="$(arg cmd_vel_topic)" />
		<arg name="joystick_used" value="$(arg joystick_used)" />
		<arg name="joystick_topic" value="$(arg joystick_topic)" />
		<arg name="calculate_goal_plugin"
			value="$(arg calculate_goal_plugin)" />
		<arg name="navigation_plugin" value="$(arg navigation_plugin)" />
		<arg name="mapping_plugin" value="$(arg mapping_plugin)" />
		<arg name="waypoint_routines" value="$(arg waypoint_routines)" />
	</include>

	<node pkg="rsm_additions" type="bootUpNode" name="bootUpNode"
		output="screen">
		<param name="wait_time" value="2" />
	</node>

	<node pkg="rsm_additions" type="additionsServiceProviderNode"
		name="additionsServiceProviderNode">
		<param name="update_frequency" value="20" />
		<param name="autonomy_cmd_vel_topic"
			value="$(arg autonomy_cmd_vel_topic)" />
		<param name="navigation_plugin" value="$(arg navigation_plugin)" />
		<param name="mapping_plugin" value="$(arg mapping_plugin)" />
		<param name="calculate_goal_plugin"
			value="$(arg calculate_goal_plugin)" />
		<param name="exploration_goal_tolerance" value="0.05" />
	</node>

	<node pkg="rrt_nbv_exploration_plugins"
		type="rneServiceProviderNode" name="rneServiceProviderNode" output="screen">
		<param name="update_frequency" value="20" />
	</node>

	<node pkg="gmapping" type="slam_gmapping" name="slam_gmapping"
		output="screen">
		<param name="base_frame" value="base_footprint" />
	</node>

	<node pkg="move_base" type="move_base" respawn="false"
		name="move_base" output="screen">
		<rosparam
			file="$(find rsm_additions)/config/gazebo_sim/navigation_husky/costmap_common.yaml"
			command="load" ns="global_costmap" />
		<rosparam
			file="$(find rsm_additions)/config/gazebo_sim/navigation_husky/costmap_common.yaml"
			command="load" ns="local_costmap" />
		<rosparam
			file="$(find rsm_additions)/config/gazebo_sim/navigation_husky/costmap_local.yaml"
			command="load" />
		<rosparam
			file="$(find rsm_additions)/config/gazebo_sim/navigation_husky/costmap_global.yaml"
			command="load" />
		<rosparam
			file="$(find rsm_additions)/config/gazebo_sim/navigation_husky/planner.yaml"
			command="load" />
		<param name="global_costmap/robot_base_frame"
			value="$(arg 
		robot_frame)" />
		<param name="local_costmap/robot_base_frame"
			value="$(arg 
		robot_frame)" />
		<remap from="/cmd_vel" to="$(arg autonomy_cmd_vel_topic)" />
	</node>

	<node pkg="move_base" type="move_base" respawn="false"
		name="move_base_reverse" output="screen">
		<rosparam
			file="$(find rsm_additions)/config/gazebo_sim/navigation_husky/costmap_common.yaml"
			command="load" ns="global_costmap" />
		<rosparam
			file="$(find rsm_additions)/config/gazebo_sim/navigation_husky/costmap_common.yaml"
			command="load" ns="local_costmap" />
		<rosparam
			file="$(find rsm_additions)/config/gazebo_sim/navigation_husky/costmap_local.yaml"
			command="load" />
		<rosparam
			file="$(find rsm_additions)/config/gazebo_sim/navigation_husky/costmap_global.yaml"
			command="load" />
		<rosparam
			file="$(find rsm_additions)/config/gazebo_sim/navigation_husky/planner.yaml"
			command="load" />
		<param name="global_costmap/robot_base_frame"
			value="$(arg robot_frame)_reverse" />
		<param name="local_costmap/robot_base_frame"
			value="$(arg robot_frame)_reverse" />
		<remap from="/cmd_vel"
			to="$(arg autonomy_cmd_vel_topic)_reverse" />
		<remap from="move_base/goal" to="move_base_reverse/goal" />
		<remap from="move_base/cancel" to="move_base_reverse/cancel" />
		<remap from="move_base/feedback" to="move_base_reverse/feedback" />
		<remap from="move_base/status" to="move_base_reverse/status" />
		<remap from="move_base/result" to="move_base_reverse/result" />
	</node>

	<node pkg="tf" type="static_transform_publisher"
		name="base_footprint_reverse"
		args="0 0 0 0 0 0             $(arg robot_frame)         $(arg robot_frame)_reverse		10" />
		
	<node pkg="hector_trajectory_server" type="hector_trajectory_server" name="hector_trajectory_server" output="screen">
		<param name="target_frame_name" value="map" />
		<param name="source_frame_name" value="$(arg robot_frame)" />
	</node>
		
	<!--  FD Scanner -->
	<node name="rotator_controller" pkg="fd_scanner"
		type="rotatorControllerNode" output="screen">
		<param name="rotation_speed" type="double" value="0.62" />
		<param name="simulation" type="bool" value="true" />
		<param name="autostart" type="bool" value="true" />
		<param name="sensor_frame" type="string" value="map" />
		<param name="velodyne_frame" type="string" value="velodyne" />		
		<param name="pointcloud_topic" type="string"
			value="velodyne_points" />
		<param name="merged_pointcloud_topic" type="string"
			value="fd_scanner_points" />
		<param name="velodyne_packet_topic" type="string"
			value="velodyne_packets" />
		<param name="filter_box_min_x" type="double" value="-0.65" />
		<param name="filter_box_min_y" type="double" value="-0.2" />
		<param name="filter_box_min_z" type="double" value="-0.4" />
		<param name="filter_box_max_x" type="double" value="0.15" />
		<param name="filter_box_max_y" type="double" value="0.2" />
		<param name="filter_box_max_z" type="double" value="0.25" />
		<param name="voxel_filter_size" type="double" value="0.1" />
	</node>

	<!-- Octomap -->

	<node pkg="octomap_server" type="octomap_server_node"
		name="octomap_server">
		<param name="resolution" value="$(arg oc_resolution)" />
		<param name="frame_id" type="string" value="map" />
		<param name="sensor_model/max_range" value="100.0" />
		<param name="latch" value="false" />
		<param name="filter_ground" value="false" />
		<remap from="cloud_in" to="velodyne_points" />
	</node>

	<!-- RN Exploration -->
	<include
		file="$(find rrt_nbv_exploration)/launch/simple.launch" >
		<arg name="update_frequency" value="20" />
		<arg name="robot_width" value="0.7" />
		<arg name="robot_radius" value="0.7" />
		<arg name="sensor_height" value="0.576" />
		<arg name="sensor_size" value="0.15" />
		<arg name="sensor_max_range" value="100" />
		<arg name="sensor_min_range" value="0.5" />
		<arg name="delta_radius" value="$(arg oc_resolution)" />
		<arg name="delta_phi" value="$(arg delta_phi)" />
		<arg name="delta_theta" value="$(arg delta_theta)" />
		<arg name="sensor_horizontal_fov" value="360" />
		<arg name="sensor_vertical_fov_bottom" value="135" /> <!-- FD Scanner degree vFoV (range from 0 to 180) -->
		<arg name="sensor_vertical_fov_top" value="0" />
		<arg name="min_view_score" value="0.05" />	
		<arg name="visualize_collision" value="true" />
		<arg name="visualize_gain_calculation" value="true" />
		<arg name="occupancy_grid_topic" value="map" />
		<arg name="edge_length" value="$(arg edge_length)" />
		<arg name="exploration_finished_timer_duration" value="10.0" />		
		<arg name="rne_mode" default="$(arg rne_mode)" /> <!-- classic=0, receding=1, horizon=2, receding_horizon=3 -->
		<arg name="horizon_length" default="$(arg horizon_length)" />
		<arg name="check_init_position" default="false" />
		<arg name="gain_mode" default="$(arg gain_mode)" />
		<arg name="oc_resolution" default="$(arg oc_resolution)" />
		<arg name="log_calculations" default="$(arg log_gain_calculations)" />
		<arg name="coupled_gain_calculation" default="$(arg coupled_gain_calculation)" />
		<arg name="max_tree_nodes" default="$(arg max_tree_nodes)" />
	</include>

	<!-- RViz fÃ¼r Exploration -->
	<node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz"
		args="-d $(find rrt_nbv_exploration_plugins)/config/gazebo_simulation_fd.rviz">
		<remap from="/move_base_simple/goal" to="/rsm/simpleGoal" />
	</node>
	<include if="$(arg rviz)"
		file="$(find rsm_rviz_plugins)/launch/rsm_rviz_plugins.launch">
		<arg name="update_frequency" value="20" />
	</include>
</launch>