<!-- Gazebo launch files for world and robot -->

<launch>
	<arg name="world_file" default="$(find husky_gazebo)/worlds/clearpath_playpen.world" />
	<arg name="laser_enabled" default="true" />
	<arg name="realsense_enabled" default="false" />
	<arg name="velodyne_enabled" default="false" />
	<arg name="use_ekf" default="false" />
	<arg name="robot_frame" default="base_footprint" />
	<arg name="gui" default="true" />

	<!-- World launch -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(arg world_file)" />
		<arg name="paused" value="false" />
		<arg name="use_sim_time" value="true" />
		<arg name="gui" value="$(arg gui)" />
		<arg name="debug" value="false" />
		<arg name="extra_gazebo_args" value="--verbose"/>
	</include>

	<arg name="robot_namespace" default="/" />

	<!-- Robot starting position in world -->
	<arg name="x" default="0.0" />
	<arg name="y" default="0.0" />
	<arg name="z" default="0.0" />
	<arg name="yaw" default="0" />

	<arg name="urdf_extras" default="$(optenv HUSKY_URDF_EXTRAS)" /> <!-- set to path with additions to Husky URDF -->

	<arg name="config_extras" default="$(eval optenv('HUSKY_CONFIG_EXTRAS', find('husky_control') + '/config/empty.yaml'))" />


	<group ns="$(arg robot_namespace)">

		<!-- Load robot description -->
		<param name="robot_description" command="$(find xacro)/xacro '$(find rsb_nbv_exploration_plugins)/urdf/husky.urdf.xacro'
		    robot_namespace:=$(arg robot_namespace)
		    realsense_enabled:=$(arg realsense_enabled)
		    laser_enabled:=$(arg laser_enabled)
		    velodyne_enabled:=$(arg velodyne_enabled)
		    urdf_extras:=$(arg urdf_extras)
		    " />

		<!-- Load controller configuration -->
		<rosparam command="load" file="$(find husky_control)/config/control.yaml" />
		<group if="$(arg realsense_enabled)">
			<!-- Load realsense controller config -->
			<rosparam command="load" file="$(find rsb_nbv_exploration_plugins)/config/realsense_config.yaml" />
			<node name="realsense_controller_spawner" pkg="controller_manager" type="spawner" args="realsense_joint_state_controller realsense_controller" />
		</group>

		<!-- Spawn controllers -->
		<node name="base_controller_spawner" pkg="controller_manager" type="spawner" args="husky_joint_publisher husky_velocity_controller" />

		<!-- Start EKF for localization -->
		<node if="$(arg use_ekf)" pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
			<rosparam command="load" file="$(find rsb_nbv_exploration_plugins)/config/localization.yaml" />
		</node>

		<!-- Fake odom from gazebo -->
		<node unless="$(arg use_ekf)" pkg="rsm_additions" type="gazeboTfNode" name="gazeboTfNode" output="screen">
			<param name="robot_frame" value="$(arg robot_frame)" />
			<param name="map_frame" value="odom" />
			<param name="odom_topic" value="/ground_truth/state" />
		</node>

		<node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server" output="screen" />

		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

		<node pkg="twist_mux" type="twist_mux" name="twist_mux">
			<rosparam command="load" file="$(find husky_control)/config/twist_mux.yaml" />
			<remap from="cmd_vel_out" to="husky_velocity_controller/cmd_vel" />
		</node>

		<!-- Override the default control parameters, see config/empty.yaml for 
			default. -->
		<rosparam command="load" file="$(arg config_extras)" />


		<!-- Spawn robot in gazebo -->
		<node name="spawn_husky_model" pkg="gazebo_ros" type="spawn_model" args="-x $(arg x)
		      -y $(arg y)
		      -z $(arg z)
		      -Y $(arg yaw)
		      -unpause
		      -urdf
		      -param robot_description
		      -model $(arg robot_namespace)" />

	</group>
</launch>